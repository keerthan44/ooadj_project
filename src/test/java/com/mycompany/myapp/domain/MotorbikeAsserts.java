package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MotorbikeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMotorbikeAllPropertiesEquals(Motorbike expected, Motorbike actual) {
        assertMotorbikeAutoGeneratedPropertiesEquals(expected, actual);
        assertMotorbikeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMotorbikeAllUpdatablePropertiesEquals(Motorbike expected, Motorbike actual) {
        assertMotorbikeUpdatableFieldsEquals(expected, actual);
        assertMotorbikeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMotorbikeAutoGeneratedPropertiesEquals(Motorbike expected, Motorbike actual) {
        assertThat(expected)
            .as("Verify Motorbike auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMotorbikeUpdatableFieldsEquals(Motorbike expected, Motorbike actual) {
        assertThat(expected)
            .as("Verify Motorbike relevant properties")
            .satisfies(e -> assertThat(e.getMake()).as("check make").isEqualTo(actual.getMake()))
            .satisfies(e -> assertThat(e.getModel()).as("check model").isEqualTo(actual.getModel()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMotorbikeUpdatableRelationshipsEquals(Motorbike expected, Motorbike actual) {}
}
