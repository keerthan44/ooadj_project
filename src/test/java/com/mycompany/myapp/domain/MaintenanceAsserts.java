package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MaintenanceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaintenanceAllPropertiesEquals(Maintenance expected, Maintenance actual) {
        assertMaintenanceAutoGeneratedPropertiesEquals(expected, actual);
        assertMaintenanceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaintenanceAllUpdatablePropertiesEquals(Maintenance expected, Maintenance actual) {
        assertMaintenanceUpdatableFieldsEquals(expected, actual);
        assertMaintenanceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaintenanceAutoGeneratedPropertiesEquals(Maintenance expected, Maintenance actual) {
        assertThat(expected)
            .as("Verify Maintenance auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaintenanceUpdatableFieldsEquals(Maintenance expected, Maintenance actual) {
        assertThat(expected)
            .as("Verify Maintenance relevant properties")
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getStartDate()).as("check startDate").isEqualTo(actual.getStartDate()))
            .satisfies(e -> assertThat(e.getEndDate()).as("check endDate").isEqualTo(actual.getEndDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMaintenanceUpdatableRelationshipsEquals(Maintenance expected, Maintenance actual) {
        assertThat(expected)
            .as("Verify Maintenance relationships")
            .satisfies(e -> assertThat(e.getMotorbike()).as("check motorbike").isEqualTo(actual.getMotorbike()));
    }
}
